### !!!
# This file is automatically generated using Terraform.
# Do not update it manually. If changes need to be made,
# please request help from a maintainer to generate the
# updated version.
### !!!

name: openverse/staging-frontend-nuxt-deploy
description: Update the task definition for a staging-frontend-nuxt deployment

inputs:
  tag:
    required: true
    description: Image tag to deploy.
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true
  slack-webhook:
    required: false

runs:
  using: "composite"

  steps:
    - name: Notify deployment start
      if: inputs.slack-webhook
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: openverse-notifications
        SLACK_COLOR: "#1e81b0"
        SLACK_ICON: https://github.com/openverse-bot.png?size=48
        SLACK_MESSAGE: "Tag: ${{ inputs.tag }}"
        SLACK_TITLE: staging-frontend is being deployed
        SLACK_USERNAME: Openverse Deployments
        SLACK_WEBHOOK: ${{ inputs.slack-webhook }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: us-east-1

    - name: Download task definition
      shell: bash
      run: |
        aws ecs describe-task-definition \
          --task-definition staging-frontend \
          --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: nuxt
        image: ghcr.io/wordpress/openverse-frontend:${{ inputs.tag }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: staging-frontend
        cluster: staging-default
        wait-for-service-stability: true

    - name: Notify deployment finished
      if: inputs.slack-webhook
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: openverse-notifications
        SLACK_COLOR: "#38b01e"
        SLACK_ICON: https://github.com/openverse-bot.png?size=48
        SLACK_MESSAGE: "Tag: ${{ inputs.tag }}"
        SLACK_TITLE: staging-frontend has been deployed
        SLACK_USERNAME: Openverse Deployments
        SLACK_WEBHOOK: ${{ inputs.slack-webhook }}
