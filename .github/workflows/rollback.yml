name: Rollback Frontend

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: The environment to roll back. `staging` or `production`.
      tag:
        required: true
        description: The GHCR image tag to which the environment should be rolled back
  pull_request:  # testing code

jobs:
  rollback:
    name: Perform Rollback
    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}
          script: |
            const { data: members } = github.rest.teams.listMembersInOrg({
              org: 'WordPress',
              team_slug: 'openverse-maintainers',
            });

            const isAllowed = members.some(m => m.login === "${{ github.actor }}")

            if (!isAllowed) {
              throw new Error(
                "Only GitHub users in the @WordPress/openverse-maintainers "
                + "team are allowed to run this workflow. If you need to run "
                + "this workflow, please reach out to that group for help."
              )
            }

      # - uses: actions/checkout@v3

      # - name: Validate `tag` input
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const { data: versions } = await github.rest.packages.getAllPackageVersionsForPackageOwnedByOrg({
      #         package_type: 'container',
      #         package_name: 'openverse-frontend',
      #         org: 'WordPress',
      #       })

      #       const exists = versions.some(v => v.metadata.container.tags.includes("${{ inputs.tag }}"))

      #       if (!exists) {
      #         throw new Error("`${{ inputs.tag }}` does not appear to be a valid tag for the ghcr.io/wordpress/openverse-frontend image.")
      #       }

      # - uses: ./.github/actions/production-frontend-deploy
      #   if: inputs.environment == 'production'
      #   with:
      #     tag: ${{ inputs.tag }}
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}

      # - uses: ./.github/actions/staging-frontend-deploy
      #   if: inputs.environment == 'staging'
      #   with:
      #     tag: ${{ inputs.tag }}
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
