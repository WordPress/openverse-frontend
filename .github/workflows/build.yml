# this is a reusable workflow that will be called by the
# push_staging and push_production workflows
# more info: https://docs.github.com/en/actions/learn-github-actions/reusing-workflows

name: build

on:
  workflow_call:
    inputs:
      is_production:
        required: true
        type: boolean
        description: Determine whether the current workflow is executed against production or not

# TODO: get the secrets via inputs, so we let the staging/production workflows retrieve their corresponding credentials
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      # setup docker buildx
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      # login in docker repository
      - name: docker login
        uses: aws-actions/amazon-ecr-login@v1

      # for staging
      # gather metadata from git & github actions to reference in docker
      - name: git & github metadata staging
        id: metadata_staging
        uses: docker/metadata-action@v3
        if: ${{ github.event.inputs.is_production == false }}
        with:
          images: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/openverse/frontend
          tags: |
            latest=auto
            type=edge,branch=main

      # build a docker image
      - name: build docker image
        uses: docker/build-push-action@v2
        if: ${{ github.event.inputs.is_production == false }}
        with:
          context: .
          tags: ${{ steps.metadata_staging.outputs.tags }}
          labels: ${{ steps.metadata_staging.outputs.labels }}
          push: true

      # for production
      # gather metadata from git & github actions to reference in docker
      - name: git & github metadata production
        id: metadata_production
        uses: docker/metadata-action@v3
        if: ${{ github.event.inputs.is_production == true }}
        with:
          images: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/openverse/frontend
          tags: |
            latest=false
            type=raw,value=stable
            type=semver,pattern={{version}}

      # build a docker image
      - name: build docker image
        uses: docker/build-push-action@v2
        if: ${{ github.event.inputs.is_production == true }}
        with:
          context: .
          tags: ${{ steps.metadata_production.outputs.tags }}
          labels: ${{ steps.metadata_production.outputs.labels }}
          push: true
