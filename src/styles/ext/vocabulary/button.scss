// vocabulary button.scss
$button-family: $family-secondary;

//@import "bulma/sass/elements/button.sass";

//$button-color: $text-strong;

$button-border-width: $control-border-width;

$button-padding-horizontal: 1em;

//$button-focus-color: $link-focus;
$button-focus-border-color: $link-focus-border;
$button-focus-box-shadow-size: 0 0 0 0.125em;
$button-focus-box-shadow-color: bulmaRgba($link, 0.25);

//$button-active-color: $link-active;
$button-active-border-color: $link-active-border;

$button-text-color: $text;
$button-text-decoration: underline;
$button-text-hover-background-color: transparent;
//$button-text-hover-color: $text-strong;

$button-disabled-background-color: $scheme-main;
$button-disabled-border-color: $border;
$button-disabled-shadow: none;
$button-disabled-opacity: 0.5;

$button-static-color: $text-light;
//$button-static-background-color: $scheme-main-ter;
$button-static-border-color: $border;

$button-colors: $colors;

.button {
  -moz-appearance: none;
  -webkit-appearance: none;
  align-items: center;
  border-radius: $control-radius;
  box-shadow: none;
  display: inline-flex;
  height: $control-height;
  line-height: 0;
  position: relative;
  vertical-align: top;
  user-select: none;
  cursor: pointer;
  font-family: $button-family;
  justify-content: center;
  text-align: center;
  white-space: nowrap;
  text-transform: uppercase;
  font-weight: 600;
  border: 0.125rem solid $color-dark-gray;
  color: $color-dark-gray;
  background-color: $color-white;
  font-size: 1.43rem;
  padding: calc(#{$space-bigger} - 0.187rem) $space-large;

  .icon {
    &,
    &.is-small,
    &.is-medium,
    &.is-large {
      height: 1.5em;
      width: 1.5em;
    }

    &:first-child:not(:last-child) {
      @include ltr-property(
        'margin',
        calc(#{-1 / 2 * $button-padding-horizontal} - #{$button-border-width}),
        false
      );
      @include ltr-property('margin', $button-padding-horizontal / 4);
    }

    &:last-child:not(:first-child) {
      @include ltr-property('margin', $button-padding-horizontal / 4, false);
      @include ltr-property(
        'margin',
        calc(#{-1 / 2 * $button-padding-horizontal} - #{$button-border-width})
      );
    }

    &:first-child:last-child {
      margin-left: calc(
        #{-1 / 2 * $button-padding-horizontal} - #{$button-border-width}
      );
      margin-right: calc(
        #{-1 / 2 * $button-padding-horizontal} - #{$button-border-width}
      );
    }
  }

  // States
  &[disabled] {
    cursor: not-allowed;
  }

  &:hover,
  &.is-hovered {
    background-color: $color-dark-gray;
    border-color: $color-dark-gray;
    color: $color-white;
    text-decoration: none;
  }

  &:focus,
  &.is-focused {
    outline: none;

    border-color: $button-focus-border-color;
    //color: $button-focus-color;

    &:not(:active) {
      box-shadow: $button-focus-box-shadow-size $button-focus-box-shadow-color;
    }
  }

  &:active,
  &.is-active {
    outline: none;
    border-color: $button-active-border-color;
    //color: $button-active-color;
  }
  // Colors
  &.is-text {
    background-color: transparent;
    border-color: transparent;
    color: $button-text-color;
    text-decoration: $button-text-decoration;
    height: auto !important;
    line-height: normal;
    text-align: left;
    text-decoration: none;
    white-space: normal;

    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
      background-color: $button-text-hover-background-color;
      //color: $button-text-hover-color;
      border-color: transparent;
      box-shadow: none;
      text-decoration: underline;
    }

    &:active,
    &.is-active {
      background-color: bulmaDarken($button-text-hover-background-color, 5%);
      //color: $button-text-hover-color;
    }

    &[disabled] {
      background-color: transparent;
      border-color: transparent;
      box-shadow: none;
    }
  }

  @each $name, $pair in $button-colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);
    &.is-#{$name} {
      background-color: $color;
      border-color: transparent;
      color: $color-invert;

      &:hover,
      &.is-hovered {
        background-color: bulmaDarken($color, 2.5%);
        border-color: transparent;
        color: $color-invert;
      }

      &:focus,
      &.is-focused {
        border-color: transparent;
        color: $color-invert;

        &:not(:active) {
          box-shadow: $button-focus-box-shadow-size bulmaRgba($color, 0.25);
        }
      }

      &:active,
      &.is-active {
        background-color: bulmaDarken($color, 5%);
        border-color: transparent;
        color: $color-invert;
      }

      &[disabled],
      fieldset[disabled] & {
        background-color: $color;
        border-color: transparent;
        box-shadow: none;
      }

      &.is-inverted {
        background-color: $color-invert;
        color: $color;

        &:hover,
        &.is-hovered {
          background-color: bulmaDarken($color-invert, 5%);
        }

        &[disabled],
        fieldset[disabled] & {
          background-color: $color-invert;
          border-color: transparent;
          box-shadow: none;
          color: $color;
        }

        &.is-loading {
          &::after {
            border-color: transparent
              transparent
              $color-invert
              $color-invert !important;
          }
        }

        &.is-outlined {
          background-color: transparent;
          border-color: $color;
          color: $color;

          &:hover,
          &.is-hovered,
          &:focus,
          &.is-focused {
            background-color: $color;
            border-color: $color;
            color: $color-invert;
          }

          &.is-loading {
            &::after {
              border-color: transparent transparent $color $color !important;
            }

            &:hover,
            &.is-hovered,
            &:focus,
            &.is-focused {
              &::after {
                border-color: transparent
                  transparent
                  $color-invert
                  $color-invert !important;
              }
            }
          }

          &[disabled],
          fieldset[disabled] & {
            background-color: transparent;
            border-color: $color;
            box-shadow: none;
            color: $color;
          }
        }

        &.is-inverted.is-outlined {
          background-color: transparent;
          border-color: $color-invert;
          color: $color-invert;

          &:hover,
          &.is-hovered,
          &:focus,
          &.is-focused {
            background-color: $color-invert;
            color: $color;
          }

          &.is-loading {
            &:hover,
            &.is-hovered,
            &:focus,
            &.is-focused {
              &::after {
                border-color: transparent transparent $color $color !important;
              }
            }
          }

          &[disabled],
          fieldset[disabled] & {
            background-color: transparent;
            border-color: $color-invert;
            box-shadow: none;
            color: $color-invert;
          }
        }

        // If light and dark colors are provided
        @if length($pair) >= 4 {
          $color-light: nth($pair, 3);
          $color-dark: nth($pair, 4);
          &.is-light {
            background-color: $color-light;
            color: $color-dark;

            &:hover,
            &.is-hovered {
              background-color: bulmaDarken($color-light, 2.5%);
              border-color: transparent;
              color: $color-dark;
            }

            &:active,
            &.is-active {
              background-color: bulmaDarken($color-light, 5%);
              border-color: transparent;
              color: $color-dark;
            }
          }
        }
      }
    }
  }

  // Sizes
  &.is-small {
    &:not(.is-rounded) {
      border-radius: $radius-small;
      font-size: $size-small;
    }
  }

  &.is-normal {
    font-size: $size-normal;
  }

  &.is-medium {
    font-size: $size-medium;
  }

  &.is-large {
    font-size: $size-large;
  }

  // Modifiers
  &[disabled],
  fieldset[disabled] & {
    background-color: $button-disabled-background-color;
    border-color: $button-disabled-border-color;
    box-shadow: $button-disabled-shadow;
    opacity: $button-disabled-opacity;
  }

  &.is-fullwidth {
    display: flex;
    width: 100%;
  }

  &.is-loading {
    color: transparent !important;
    pointer-events: none;

    &::after {
      animation: spinAround 500ms infinite linear;
      border: 2px solid $grey-lighter;
      border-radius: $radius-rounded;
      border-right-color: transparent;
      border-top-color: transparent;
      content: '';
      display: block;
      height: 1em;
      width: 1em;
      position: absolute;
      left: calc(50% - (1em / 2));
      top: calc(50% - (1em / 2));
    }
  }

  &.is-rounded {
    border-radius: $radius-rounded;
    padding-left: calc(#{$button-padding-horizontal} + 0.25em);
    padding-right: calc(#{$button-padding-horizontal} + 0.25em);
  }
}

.buttons {
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  .button {
    margin-bottom: 0.5rem;

    &:not(:last-child):not(.is-fullwidth) {
      @include ltr-property('margin', 0.5rem);
    }
  }

  &:last-child {
    margin-bottom: -0.5rem;
  }

  &:not(:last-child) {
    margin-bottom: 1rem;
  }

  // Sizes
  &.are-small {
    .button:not(.is-normal):not(.is-medium):not(.is-large) {
      font-size: $size-small;
    }
  }

  &.are-medium {
    .button:not(.is-small):not(.is-normal):not(.is-large) {
      font-size: $size-medium;
    }
  }

  &.are-large {
    .button:not(.is-small):not(.is-normal):not(.is-medium) {
      font-size: $size-large;
    }
  }

  &.has-addons {
    .button {
      &:not(:first-child) {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
      }

      &:not(:last-child) {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
        @include ltr-property('margin', -1px);
      }

      &:last-child {
        @include ltr-property('margin', 0);
      }

      &:hover,
      &.is-hovered {
        z-index: 2;
      }

      &:focus,
      &.is-focused,
      &:active,
      &.is-active,
      &.is-selected {
        z-index: 3;

        &:hover {
          z-index: 4;
        }
      }

      &.is-expanded {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }

  &.is-centered {
    justify-content: center;

    &:not(.has-addons) {
      .button:not(.is-fullwidth) {
        margin-left: 0.25rem;
        margin-right: 0.25rem;
      }
    }
  }

  &.is-right {
    justify-content: flex-end;

    &:not(.has-addons) {
      .button:not(.is-fullwidth) {
        margin-left: 0.25rem;
        margin-right: 0.25rem;
      }
    }
  }
}

// vocabulary button
.button {
  &.big {
    font-size: 1.75rem;
    padding: calc(#{$space-large} - 0.093rem) $space-large;
  }

  &.small {
    font-size: 1rem;
    padding: $space-small calc(#{$space-normal} + 0.2rem);
  }

  &.tiny {
    font-family: $family-source-sans-pro;
    padding: 0 $space-small;
    font-size: 1rem;
    text-transform: none;
    height: 2rem;
  }

  &.tag {
    font-family: $family-source-sans-pro;
    padding: 0 $space-normal;
    font-size: 0.81rem;
    text-transform: none;
    min-height: 1.81rem;
    height: auto;
    line-height: normal;
    white-space: normal;
    border-radius: 18.75rem;
    border: 0.125rem solid $color-light-gray;
    &:hover {
      border-color: $color-dark-gray;
    }

    &--removable {
      font-family: $family-source-sans-pro;
      padding: 0 $space-normal;
      font-size: 0.81rem;
      text-transform: none;
      height: 1.81rem;
      border-radius: 18.75rem;
      border: 0.125rem solid $color-light-gray;
      &:hover {
        color: $color-dark-gray;
        background-color: $color-white;
        border: 0.125rem solid $color-dark-gray;
      }

      &:hover > .icon {
        color: $color-white;
        background-color: $color-dark-gray;

        &:first-child:last-child {
          margin-right: calc(-1rem - 1px);
        }
      }
    }

    &--removable .icon {
      height: 1.56rem;
      width: 1.9rem;
      line-height: 1.56rem;
      font-size: 1rem;
      background-color: $color-white;
      color: $color-light-gray;
      border-top-right-radius: 18.75rem;
      border-bottom-right-radius: 18.75rem;

      &:first-child:last-child {
        margin-left: 0.3rem;
        margin-right: -1rem;
      }
    }
  }

  &.is-primary:hover {
    background-color: $color-brighter-tomato;
  }

  &.is-success:hover {
    background-color: $color-brighter-forest-green;
  }

  &.is-info:hover {
    background-color: $color-brighter-dark-slate-blue;
  }

  &.donate {
    background-color: $color-gold;
    border-color: $color-gold;
    color: $color-black;

    &:hover {
      background-color: $color-brighter-gold;
      border-color: $color-brighter-gold;
      color: $color-black;
      text-decoration: none;
    }
  }
}
